name: Firebase distribution

on:
  push:
    branches:
      - main  # Only run when changes are pushed to main
  workflow_dispatch:  # Allows manual triggers from GitHub UI
    inputs:
      build_mode:
        description: 'Build mode (release/debug)'
        required: true
        default: 'release'
        type: choice
        options:
          - release

env:
  JAVA_VERSION: '17'
  FLUTTER_BUILD_MODE: release
  FLUTTER_VERSION_NAME: 1.0.0
  FLUTTER_VERSION_CODE: 11

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Java 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Set up Flutter 3.24.3
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.24.3'
          channel: 'stable'

      - name: Install dependencies
        run: flutter pub get

      - name: Update Gradle files
        run: |
          cat << 'EOF' >> android/app/build.gradle

          android {
            buildTypes {
                release {
                    signingConfig null
                    minifyEnabled true
                    proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
                }
            }
          }
          EOF

      - name: Build APK
        run: flutter build apk --release

      - name: Debug - List build directory
        run: |
          echo "Listing build directory contents:"
          ls -R build/app/outputs/apk/release/

      - name: Sign APK
        env:
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
        run: |
          # Copy the keystore file
          echo "${{ secrets.KEYSTORE }}" | base64 --decode > android/app/my-release-key.jks
          
          # Sign the APK
          jarsigner -verbose -sigalg SHA1withRSA -digestalg SHA1 \
            -keystore android/app/my-release-key.jks \
            -storepass $KEYSTORE_PASSWORD -keypass $KEY_PASSWORD \
            build/app/outputs/apk/release/app-release-unsigned.apk $KEY_ALIAS

          # Verify APK
          jarsigner -verify build/app/outputs/apk/release/app-release-unsigned.apk

      - name: Install Firebase CLI and Setup Service Account
        env:
          GOOGLE_SERVICE_ACCOUNT_JSON: ${{ secrets.GOOGLE_SERVICE_ACCOUNT_JSON }}
        run: |
            npm install -g firebase-tools
            echo -n "$GOOGLE_SERVICE_ACCOUNT_JSON" > ${{ github.workspace }}/gsa.json

      - name: Upload APK to Firebase App Distribution
        run: |
            FILE_PATH=$(find build/app/outputs/apk/release -name '*.apk' -print -quit) && [ -n "$FILE_PATH" ]

            firebase appdistribution:distribute $FILE_PATH \
            --app ${{ secrets.FIREBASE_ANDROID_APP_ID }} \
            --groups 'beta_testers'
